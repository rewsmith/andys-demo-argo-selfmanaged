---
# Source: tyk-operator/templates/all.yaml
apiVersion: v1

kind: ServiceAccount
metadata:
  name: tyk-operator-controller-manager
  namespace: tyk
---
# Source: tyk-operator/templates/all.yaml
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 91ad8c6e.tyk.io
kind: ConfigMap
metadata:
  name: tyk-operator-manager-config
  namespace: tyk
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: tyk-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - apidefinitions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - apidefinitions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - apidescriptions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - apidescriptions/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - apidescriptions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - operatorcontexts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - operatorcontexts/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - operatorcontexts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalapicatalogues
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalapicatalogues/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalapicatalogues/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - portalconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - securitypolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - securitypolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - subgraphs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - subgraphs/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - subgraphs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - supergraphs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - supergraphs/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - supergraphs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - tykoasapidefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tyk.tyk.io
  resources:
  - tykoasapidefinitions/finalizers
  verbs:
  - update
- apiGroups:
  - tyk.tyk.io
  resources:
  - tykoasapidefinitions/status
  verbs:
  - get
  - patch
  - update
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tyk-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tyk-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tyk-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tyk-operator-manager-role
subjects:
- kind: ServiceAccount
  name: tyk-operator-controller-manager
  namespace: tyk
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tyk-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tyk-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: tyk-operator-controller-manager
  namespace: tyk
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tyk-operator-leader-election-role
  namespace: tyk
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: tyk-operator/templates/all.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tyk-operator-leader-election-rolebinding
  namespace: tyk
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tyk-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: tyk-operator-controller-manager
  namespace: tyk
---
# Source: tyk-operator/templates/all.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: tyk-operator-controller-manager
  name: tyk-operator-controller-manager-metrics-service
  namespace: tyk
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: tyk-operator-controller-manager
---
# Source: tyk-operator/templates/all.yaml
apiVersion: v1
kind: Service
metadata:
  name: tyk-operator-webhook-service
  namespace: tyk
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: tyk-operator-controller-manager
---
# Source: tyk-operator/templates/all.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: tyk-operator-controller-manager
  name: tyk-operator-controller-manager
  namespace: tyk
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: tyk-operator-controller-manager
  template:
    metadata:
      labels:
        control-plane: tyk-operator-controller-manager
    spec:
      containers:
      - args:
        - --config=controller_manager_config.yaml
        command:
        - /manager
        env:
          - name: TYK_HTTPS_INGRESS_PORT
            value: "8443"
          - name: TYK_HTTP_INGRESS_PORT
            value: "8080"
        envFrom:
          - secretRef:
              name: tyk-operator-conf
        image: caroltyk/tyk-operator:test
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      hostNetwork: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: tyk-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      
      - configMap:
          name: tyk-operator-manager-config
        name: manager-config
---
# Source: tyk-operator/templates/all.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tyk-operator-serving-cert
  namespace: tyk
spec:
  dnsNames:
  - tyk-operator-webhook-service.tyk.svc
  - tyk-operator-webhook-service.tyk.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: tyk-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
# Source: tyk-operator/templates/all.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: tyk-operator-selfsigned-issuer
  namespace: tyk
spec:
  selfSigned: {}
---
# Source: tyk-operator/templates/all.yaml
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: tyk/tyk-operator-serving-cert
  name: tyk-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: tyk-operator-webhook-service
      namespace: tyk
      path: /mutate-tyk-tyk-io-v1alpha1-apidefinition
  failurePolicy: Fail
  name: mapidefinition.kb.io
  rules:
  - apiGroups:
    - tyk.tyk.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - apidefinitions
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: tyk-operator-webhook-service
      namespace: tyk
      path: /mutate-tyk-tyk-io-v1alpha1-securitypolicy
  failurePolicy: Fail
  name: msecuritypolicy.kb.io
  rules:
  - apiGroups:
    - tyk.tyk.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - securitypolicies
  sideEffects: None
---
# Source: tyk-operator/templates/all.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: tyk/tyk-operator-serving-cert
  name: tyk-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: tyk-operator-webhook-service
      namespace: tyk
      path: /validate-tyk-tyk-io-v1alpha1-apidefinition
  failurePolicy: Fail
  name: vapidefinition.kb.io
  rules:
  - apiGroups:
    - tyk.tyk.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - apidefinitions
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: tyk-operator-webhook-service
      namespace: tyk
      path: /validate-tyk-tyk-io-v1alpha1-securitypolicy
  failurePolicy: Fail
  name: vsecuritypolicy.kb.io
  rules:
  - apiGroups:
    - tyk.tyk.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - securitypolicies
  sideEffects: None
